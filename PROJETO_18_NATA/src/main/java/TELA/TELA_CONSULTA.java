/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TELA;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Nata e Julia
 */
public class TELA_CONSULTA extends javax.swing.JFrame {

    /**
     * Creates new form TELA_UPDATE
     */
    public TELA_CONSULTA() throws ParseException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtConsultId = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblNasc = new javax.swing.JLabel();
        lblCpf = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtPeso = new javax.swing.JTextField();
        btnAtualizar = new javax.swing.JButton();
        btnConsulta = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Lista = new javax.swing.JTable();
        btnCadastro = new javax.swing.JButton();
        txtIdade = new javax.swing.JTextField();
        jComboBox_Sexo = new javax.swing.JComboBox<>();
        lblEmail1 = new javax.swing.JLabel();
        txtAltura = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("ID:");

        txtConsultId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsultIdActionPerformed(evt);
            }
        });

        lblNome.setText("NOME DO PATO:");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        lblNasc.setText("IDADE:");

        lblCpf.setText("SEXO:");

        lblEmail.setText("PESO:");

        btnAtualizar.setText("ATUALIZAR");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnConsulta.setText("CONSULTAR");
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });

        btnDeletar.setText("DELETAR");
        btnDeletar.setMaximumSize(new java.awt.Dimension(95, 27));
        btnDeletar.setMinimumSize(new java.awt.Dimension(95, 27));
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        jTable_Lista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nome", "Data de Nascimento", "CPF", "E-mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Lista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_ListaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Lista);
        if (jTable_Lista.getColumnModel().getColumnCount() > 0) {
            jTable_Lista.getColumnModel().getColumn(0).setResizable(false);
            jTable_Lista.getColumnModel().getColumn(0).setHeaderValue("Id");
            jTable_Lista.getColumnModel().getColumn(1).setResizable(false);
            jTable_Lista.getColumnModel().getColumn(1).setHeaderValue("Nome");
            jTable_Lista.getColumnModel().getColumn(2).setResizable(false);
            jTable_Lista.getColumnModel().getColumn(2).setHeaderValue("Data de Nascimento");
            jTable_Lista.getColumnModel().getColumn(3).setResizable(false);
            jTable_Lista.getColumnModel().getColumn(3).setHeaderValue("CPF");
            jTable_Lista.getColumnModel().getColumn(4).setResizable(false);
            jTable_Lista.getColumnModel().getColumn(4).setHeaderValue("E-mail");
        }

        btnCadastro.setText("CADASTRAR");
        btnCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroActionPerformed(evt);
            }
        });

        txtIdade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdadeActionPerformed(evt);
            }
        });

        jComboBox_Sexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONAR", "M", "F" }));
        jComboBox_Sexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_SexoActionPerformed(evt);
            }
        });

        lblEmail1.setText("ALTURA:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(btnCadastro)
                                    .addGap(23, 23, 23)
                                    .addComponent(btnAtualizar)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtIdade, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEmail1)
                                    .addComponent(txtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblEmail)
                                        .addComponent(lblCpf)
                                        .addComponent(lblNasc)
                                        .addComponent(lblNome)
                                        .addComponent(txtNome)
                                        .addComponent(txtPeso, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)))
                                .addComponent(jComboBox_Sexo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtConsultId, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnConsulta))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConsultId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsulta))
                .addGap(18, 18, 18)
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblNasc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblCpf)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox_Sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblEmail1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtualizar)
                    .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCadastro))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
        Connection conexao = null;
        PreparedStatement statement = null;

        String url = "jdbc:mysql://localhost:3306/pato";
        String usuario = "root";
        String senha = "";

        try {

            String id = txtConsultId.getText();
            if (id.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, insira um ID.");
                return;
            }

            conexao = DriverManager.getConnection(url, usuario, senha);
            String sql = "UPDATE usuario SET nome = ?, nascimento = ?, cpf = ?, email = ? WHERE id = ?";
            statement = conexao.prepareStatement(sql);

            statement.setString(1, txtNome.getText());
            statement.setString(2, txtIdade.getText());
            statement.setString(3, jComboBox_Sexo.getSelectedItem().toString());
            statement.setString(4, txtPeso.getText());
            statement.setString(5, txtAltura.getText());

            int linhasAfetadas = statement.executeUpdate();

            if (linhasAfetadas > 0) {
                System.out.println("Atualização realizada com sucesso!");
                JOptionPane.showMessageDialog(this, "Atualização realizada com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Nenhum registro encontrado com o ID fornecido.");
            }

        } catch (DateTimeParseException ex) {

            JOptionPane.showMessageDialog(this, "Data de nascimento inválida!");
        } catch (SQLException ex) {
            Logger.getLogger(TELA_CADASTRO.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Erro no Banco de Dados: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        // TODO add your handling code here:
        Connection conexao = null;
        PreparedStatement statement = null;

        String url = "jdbc:mysql://localhost:3306/pato";
        String usuario = "root";
        String senha = "";

        String id = txtConsultId.getText();

        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, insira um ID para deletar.");
            return;
        }

        int confirmacao = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o registro?",
                "Confirmação de Exclusão", JOptionPane.YES_NO_OPTION);

        if (confirmacao == JOptionPane.YES_OPTION) {
            try {
                conexao = DriverManager.getConnection(url, usuario, senha);
                String sql = "DELETE FROM usuario WHERE id = ?";
                statement = conexao.prepareStatement(sql);
                statement.setString(1, id);

                int rowsDeleted = statement.executeUpdate();

                if (rowsDeleted > 0) {
                    JOptionPane.showMessageDialog(this, "Registro deletado com sucesso!");

                    txtNome.setText("");
                    txtIdade.setText("");
                    jComboBox_Sexo.setSelectedIndex(-1);
                    txtPeso.setText("");
                    txtAltura.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "ID não encontrado. Nenhum registro foi deletado.");
                }

            } catch (SQLException ex) {
                Logger.getLogger(TELA_CADASTRO.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Erro no Banco de Dados: " + ex.getMessage());
            } finally {
                try {
                    if (statement != null) {
                        statement.close();
                    }
                    if (conexao != null) {
                        conexao.close();
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Exclusão cancelada.");
        }
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        PopularJTable("SELECT * FROM usuario");
    }//GEN-LAST:event_formWindowOpened

    private void jTable_ListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_ListaMouseClicked
        // TODO add your handling code here:
        int linha = jTable_Lista.getSelectedRow();

        txtNome.setText(jTable_Lista.getValueAt(linha, 1).toString());
        txtIdade.setText(jTable_Lista.getValueAt(linha, 2).toString());
        jComboBox_Sexo.setSelectedItem(jTable_Lista.getValueAt(linha, 3).toString());
        txtPeso.setText(jTable_Lista.getValueAt(linha, 4).toString());
        txtAltura.setText(jTable_Lista.getValueAt(linha, 5).toString());

    }//GEN-LAST:event_jTable_ListaMouseClicked

    private void btnCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroActionPerformed
        // TODO add your handling code here:
        Connection conexao = null;
        PreparedStatement statement = null;

        String url = "jdbc:mysql://localhost:3306/pato";
        String usuario = "root";
        String senha = "";
        String dataNascimento = txtIdade.getText();

        try {

            conexao = DriverManager.getConnection(url, usuario, senha);
            String sql = "INSERT INTO corredor (nome, idade, sexo, peso, altura) VALUES (?, ?, ?, ?, ?)";
            statement = conexao.prepareStatement(sql);

            statement.setString(1, txtNome.getText());
            statement.setString(2, txtIdade.getText());
            statement.setString(3, jComboBox_Sexo.getSelectedItem().toString());
            statement.setString(4, txtPeso.getText());
            statement.setString(5, txtAltura.getText());

            statement.executeUpdate();
            System.out.println("Cadastro realizado com sucesso!");

            JOptionPane.showMessageDialog(this, "Cadastro realizado com sucesso!");

        } catch (DateTimeParseException ex) {

            JOptionPane.showMessageDialog(this, "Data de nascimento inválida!");
        } catch (SQLException ex) {
            Logger.getLogger(TELA_CADASTRO.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Erro no Banco de Dados: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnCadastroActionPerformed

    private void txtIdadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdadeActionPerformed

    private void jComboBox_SexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_SexoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_SexoActionPerformed

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        // TODO add your handling code here:
        String id = txtConsultId.getText();
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, insira um ID.");
            return;
        }

        String url = "jdbc:mysql://localhost:3306/pato";
        String usuario = "root";
        String senha = "";
        Connection conexao = null;
        PreparedStatement statement = null;
        ResultSet resultSet = null;

        try {
            conexao = DriverManager.getConnection(url, usuario, senha);
            String sql = "SELECT nome, idade, sexo, peso, altura FROM corredor WHERE id = ?";
            statement = conexao.prepareStatement(sql);
            statement.setString(1, id);

            resultSet = statement.executeQuery();

            if (resultSet.next()) {
                txtNome.setText(resultSet.getString("nome"));
                txtIdade.setText(resultSet.getString("idade"));
                jComboBox_Sexo.setSelectedItem(resultSet.getString("sexo"));
                txtPeso.setText(resultSet.getString("peso"));
                txtAltura.setText(resultSet.getString("altura"));
            } else {
                JOptionPane.showMessageDialog(this, "Usuário não encontrado com esse ID.");
            }

        } catch (SQLException ex) {
            Logger.getLogger(TELA_CADASTRO.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Erro no Banco de Dados: " + ex.getMessage());
        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
                if (statement != null) {
                    statement.close();
                }
                if (conexao != null) {
                    conexao.close();
                }
            } catch (SQLException e) {
                System.out.println("Erro no Banco de dados:" + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnConsultaActionPerformed

    private void txtConsultIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsultIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsultIdActionPerformed

    public void PopularJTable(String sql) {
        try {
            // Conexão com o banco de dados
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/pato", "root", "");

            // Preparar a consulta SQL
            PreparedStatement banco = con.prepareStatement(sql);
            ResultSet resultado = banco.executeQuery();

            // Limpa as linhas existentes no modelo da JTable
            DefaultTableModel model = (DefaultTableModel) jTable_Lista.getModel();
            model.setNumRows(0);

            // Itera sobre o resultado da consulta e adiciona as linhas ao modelo da JTable
            while (resultado.next()) {
                model.addRow(new Object[]{
                    resultado.getString("id"),
                    resultado.getString("nome"),
                    resultado.getString("nascimento"),
                    resultado.getString("cpf"),
                    resultado.getString("email")
                });
            }

            resultado.close();
            banco.close();
            con.close();
        } catch (SQLException e) {
            System.out.println("O erro foi: " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TELA_CONSULTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TELA_CONSULTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TELA_CONSULTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TELA_CONSULTA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new TELA_CONSULTA().setVisible(true);
            } catch (ParseException ex) {
                Logger.getLogger(TELA_CONSULTA.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastro;
    private javax.swing.JButton btnConsulta;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JComboBox<Object> jComboBox_Sexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Lista;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmail1;
    private javax.swing.JLabel lblNasc;
    private javax.swing.JLabel lblNome;
    private javax.swing.JTextField txtAltura;
    private javax.swing.JTextField txtConsultId;
    private javax.swing.JTextField txtIdade;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPeso;
    // End of variables declaration//GEN-END:variables
}
